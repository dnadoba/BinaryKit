{"Structs/BinaryWriter.html#/s:9BinaryKit0A6WriterV5bytesxvp":{"name":"bytes","abstract":"<p>Returns the stored bytes.</p>","parent_name":"BinaryWriter"},"Structs/BinaryWriter.html#/s:9BinaryKit0A6WriterV5countSivp":{"name":"count","abstract":"<p>Returns the stored number of bytes.</p>","parent_name":"BinaryWriter"},"Structs/BinaryWriter.html#/s:9BinaryKit0A6WriterV5bytesACyxGx_tcfc":{"name":"init(bytes:)","abstract":"<p>Creates a new <code>BinaryWriter</code>.</p>","parent_name":"BinaryWriter"},"Structs/BinaryWriter.html#/s:9BinaryKit0A6WriterV9writeByteyys5UInt8VF":{"name":"writeByte(_:)","abstract":"<p>Writes a byte (<code>UInt8</code>) to <code>self</code>.</p>","parent_name":"BinaryWriter"},"Structs/BinaryWriter.html#/s:9BinaryKit0A6WriterV10writeBytesyyqd__10Foundation12DataProtocolRd__lF":{"name":"writeBytes(_:)","abstract":"<p>Writes bytes (<code>DataProtocol</code>) to <code>self</code>.</p>","parent_name":"BinaryWriter"},"Structs/BinaryWriter.html#/s:9BinaryKit0A6WriterV8writeBit3bitys5UInt8V_tF":{"name":"writeBit(bit:)","abstract":"<p>Writes a bit (<code>UInt8</code>) to <code>self</code>.</p>","parent_name":"BinaryWriter"},"Structs/BinaryWriter.html#/s:9BinaryKit0A6WriterV9writeBits4from5countyqd___Sits17FixedWidthIntegerRd__lF":{"name":"writeBits(from:count:)","abstract":"<p>Undocumented</p>","parent_name":"BinaryWriter"},"Structs/BinaryWriter.html#/s:9BinaryKit0A6WriterV9writeBoolyySbF":{"name":"writeBool(_:)","abstract":"<p>Writes a <code>Bool</code> as a bit to <code>self</code>.</p>","parent_name":"BinaryWriter"},"Structs/BinaryWriter.html#/s:9BinaryKit0A6WriterV11writeStringyySSF":{"name":"writeString(_:)","abstract":"<p>Writes a <code>String</code> to <code>self</code>.</p>","parent_name":"BinaryWriter"},"Structs/BinaryWriter.html#/s:9BinaryKit0A6WriterV8writeIntyyqd__s17FixedWidthIntegerRd__lF":{"name":"writeInt(_:)","abstract":"<p>Writes an <code>FixedWidthInteger</code> (<code>Int</code>, <code>UInt8</code>, <code>Int8</code>, <code>UInt16</code>, <code>Int16</code>, …) to <code>self</code>.</p>","parent_name":"BinaryWriter"},"Structs/BinaryWriter.html#/s:9BinaryKit0A6WriterV8capacityACyxGSi_tcfc":{"name":"init(capacity:)","abstract":"<p>Undocumented</p>","parent_name":"BinaryWriter"},"Structs/BinaryWriter.html#/s:9BinaryKit0A6WriterVAASays5UInt8VGRszrlEACyAFGycfc":{"name":"init()","abstract":"<p>Creates an empty <code>BinaryWriter</code>.</p>","parent_name":"BinaryWriter"},"Structs/BinaryWriter.html#/s:9BinaryKit0A6WriterVAASays5UInt8VGRszrlE9hexStringACyAFGSgSS_tcfc":{"name":"init(hexString:)","abstract":"<p>Creates a new <code>BinaryWriter</code> with a string of hexadecimal values converted to bytes.</p>","parent_name":"BinaryWriter"},"Structs/BinaryReader.html#/s:9BinaryKit0A6ReaderV5bytesxvp":{"name":"bytes","abstract":"<p>Returns the stored bytes.</p>","parent_name":"BinaryReader"},"Structs/BinaryReader.html#/s:9BinaryKit0A6ReaderV5countSivp":{"name":"count","abstract":"<p>Returns the stored number of bytes.</p>","parent_name":"BinaryReader"},"Structs/BinaryReader.html#/s:9BinaryKit0A6ReaderV7isEmptySbvp":{"name":"isEmpty","abstract":"<p>Undocumented</p>","parent_name":"BinaryReader"},"Structs/BinaryReader.html#/s:9BinaryKit0A6ReaderV14readByteCursorSivp":{"name":"readByteCursor","abstract":"<p>Returns the byte position of the reading cursor.</p>","parent_name":"BinaryReader"},"Structs/BinaryReader.html#/s:9BinaryKit0A6ReaderV5bytesACyxGx_tcfc":{"name":"init(bytes:)","abstract":"<p>Creates a new <code>BinaryReader</code>.</p>","parent_name":"BinaryReader"},"Structs/BinaryReader.html#/s:9BinaryKit0A6ReaderV15resetReadCursoryyF":{"name":"resetReadCursor()","abstract":"<p>Sets the reading cursor back to its initial value.</p>","parent_name":"BinaryReader"},"Structs/BinaryReader.html#/s:9BinaryKit0A6ReaderV6getBit5indexs5UInt8VSi_tKF":{"name":"getBit(index:)","abstract":"<p>All <code>get</code> methods give access to binary data at any given","parent_name":"BinaryReader"},"Structs/BinaryReader.html#/s:9BinaryKit0A6ReaderV7getBits5range4typeqd__SnySiG_qd__mtKs17FixedWidthIntegerRd__lF":{"name":"getBits(range:type:)","abstract":"<p>Returns the <code>Int</code>-value of the given range.</p>","parent_name":"BinaryReader"},"Structs/BinaryReader.html#/s:9BinaryKit0A6ReaderV7getByte5indexs5UInt8VSi_tKF":{"name":"getByte(index:)","abstract":"<p>Returns the <code>UInt8</code>-value of the given <code>index</code>.</p>","parent_name":"BinaryReader"},"Structs/BinaryReader.html#/s:9BinaryKit0A6ReaderV8getBytes5range11SubSequenceQzSnySiG_tKF":{"name":"getBytes(range:)","abstract":"<p>Returns an <code>[UInt8]</code> of the given <code>range</code>.</p>","parent_name":"BinaryReader"},"Structs/BinaryReader.html#/s:9BinaryKit0A6ReaderV7readBits5UInt8VyKF":{"name":"readBit()","abstract":"<p>All <code>read*</code> methods return the next requested binary data","parent_name":"BinaryReader"},"Structs/BinaryReader.html#/s:9BinaryKit0A6ReaderV8readBits_4typeqd__Si_qd__mtKs17FixedWidthIntegerRd__lF":{"name":"readBits(_:type:)","abstract":"<p>Returns the <code>Int</code>-value of the next n-bits (<code>quantitiy</code>)","parent_name":"BinaryReader"},"Structs/BinaryReader.html#/s:9BinaryKit0A6ReaderV8readBytes5UInt8VyKF":{"name":"readByte()","abstract":"<p>Returns the <code>UInt8</code>-value of the next byte and","parent_name":"BinaryReader"},"Structs/BinaryReader.html#/s:9BinaryKit0A6ReaderV9readBytesy11SubSequenceQzSiKF":{"name":"readBytes(_:)","abstract":"<p>Returns a <code>[UInt8]</code> of the next n-bytes (<code>quantitiy</code>) and","parent_name":"BinaryReader"},"Structs/BinaryReader.html#/s:9BinaryKit0A6ReaderV9readBytesy11SubSequenceQzs5UInt8VKF":{"name":"readBytes(_:)","abstract":"<p>Undocumented</p>","parent_name":"BinaryReader"},"Structs/BinaryReader.html#/s:9BinaryKit0A6ReaderV10readString16quantitiyOfBytes8encodingSSSi_SS10FoundationE8EncodingVtKF":{"name":"readString(quantitiyOfBytes:encoding:)","abstract":"<p>Returns a <code>String</code> of the next n-bytes (<code>quantitiy</code>) and","parent_name":"BinaryReader"},"Structs/BinaryReader.html#/s:9BinaryKit0A6ReaderV13readCharacterSJyKF":{"name":"readCharacter()","abstract":"<p>Returns the next byte as <code>Character</code> and","parent_name":"BinaryReader"},"Structs/BinaryReader.html#/s:9BinaryKit0A6ReaderV8readBoolSbyKF":{"name":"readBool()","abstract":"<p>Returns the <code>Bool</code>-value of the next bit and","parent_name":"BinaryReader"},"Structs/BinaryReader.html#/s:9BinaryKit0A6ReaderV10readNibbles5UInt8VyKF":{"name":"readNibble()","abstract":"<p>Returns the <code>UInt8</code>-value of the next 4 bit and","parent_name":"BinaryReader"},"Structs/BinaryReader.html#/s:9BinaryKit0A6ReaderV11readInteger4typeqd__qd__m_tKs010FixedWidthE0Rd__lF":{"name":"readInteger(type:)","abstract":"<p>Undocumented</p>","parent_name":"BinaryReader"},"Structs/BinaryReader.html#/s:9BinaryKit0A6ReaderV11readInteger9byteCount4typeqd__Si_qd__mtKs010FixedWidthE0Rd__lF":{"name":"readInteger(byteCount:type:)","abstract":"<p>Undocumented</p>","parent_name":"BinaryReader"},"Structs/BinaryReader.html#/s:9BinaryKit0A6ReaderV9readUInt8s0E0VyKF":{"name":"readUInt8()","abstract":"<p>Returns an <code>UInt8</code> and increments the reading cursor by 1 byte.</p>","parent_name":"BinaryReader"},"Structs/BinaryReader.html#/s:9BinaryKit0A6ReaderV8readInt8s0E0VyKF":{"name":"readInt8()","abstract":"<p>Returns an <code>Int8</code> and increments the reading cursor by 1 byte.</p>","parent_name":"BinaryReader"},"Structs/BinaryReader.html#/s:9BinaryKit0A6ReaderV18readRemainingBytes11SubSequenceQzyKF":{"name":"readRemainingBytes()","abstract":"<p>Undocumented</p>","parent_name":"BinaryReader"},"Structs/BinaryReader.html#/s:9BinaryKit0A6ReaderV7indices2ofSaySiGSays5UInt8VG_tF":{"name":"indices(of:)","abstract":"<p>Returns indices of given <code>[UInt8]</code>.</p>","parent_name":"BinaryReader"},"Structs/BinaryReader.html#/s:9BinaryKit0A6ReaderV7indices2ofSaySiGSS_tF":{"name":"indices(of:)","abstract":"<p>Returns indices of given <code>String</code>.</p>","parent_name":"BinaryReader"},"Structs/BinaryReader.html#/s:9BinaryKit0A6ReaderVAASays5UInt8VGRszrlEACyAFGycfc":{"name":"init()","abstract":"<p>Creates an empty <code>BinaryReader</code>.</p>","parent_name":"BinaryReader"},"Structs/BinaryReader.html#/s:9BinaryKit0A6ReaderVAASays5UInt8VGRszrlE9hexStringACyAFGSgSS_tcfc":{"name":"init(hexString:)","abstract":"<p>Creates a new <code>BinaryReader</code> with a string of hexadecimal values converted to bytes.</p>","parent_name":"BinaryReader"},"Structs/BinaryReader.html":{"name":"BinaryReader","abstract":"<p>Undocumented</p>"},"Structs/BinaryWriter.html":{"name":"BinaryWriter","abstract":"<p>Undocumented</p>"},"Extensions/FixedWidthInteger.html#/s:s17FixedWidthIntegerP9BinaryKitE18toNetworkByteOrderxvp":{"name":"toNetworkByteOrder","abstract":"<p>Undocumented</p>","parent_name":"FixedWidthInteger"},"Extensions/FixedWidthInteger.html#/s:s17FixedWidthIntegerP9BinaryKitE4data10Foundation4DataVvp":{"name":"data","abstract":"<p>A collection containing the words of this value’s binary representation, in order from the least significant to most significant.</p>","parent_name":"FixedWidthInteger"},"Extensions/FixedWidthInteger.html#/s:s17FixedWidthIntegerP9BinaryKitE16networkByteOrderxx_tcfc":{"name":"init(networkByteOrder:)","abstract":"<p>Undocumented</p>","parent_name":"FixedWidthInteger"},"Extensions/FixedWidthInteger.html#/s:s17FixedWidthIntegerP9BinaryKitE5bytesxqd___tc10Foundation12DataProtocolRd__lufc":{"name":"init(bytes:)","abstract":"<p>Undocumented</p>","parent_name":"FixedWidthInteger"},"Extensions/FixedWidthInteger.html":{"name":"FixedWidthInteger"},"Enums/BinaryError.html#/s:9BinaryKit0A5ErrorO11outOfBoundsyA2CmF":{"name":"outOfBounds","abstract":"<p>Undocumented</p>","parent_name":"BinaryError"},"Enums/BinaryError.html#/s:9BinaryKit0A5ErrorO9notStringyA2CmF":{"name":"notString","abstract":"<p>Undocumented</p>","parent_name":"BinaryError"},"Enums/BinaryError.html#/s:9BinaryKit0A5ErrorO52requestesByteCountDoesNotFitIntoRequestedIntegerTypeyA2CmF":{"name":"requestesByteCountDoesNotFitIntoRequestedIntegerType","abstract":"<p>Undocumented</p>","parent_name":"BinaryError"},"Enums/BinaryError.html":{"name":"BinaryError","abstract":"<p>Undocumented</p>"},"Enums.html":{"name":"Enumerations","abstract":"<p>The following enumerations are available globally.</p>"},"Extensions.html":{"name":"Extensions","abstract":"<p>The following extensions are available globally.</p>"},"Structs.html":{"name":"Structures","abstract":"<p>The following structures are available globally.</p>"}}